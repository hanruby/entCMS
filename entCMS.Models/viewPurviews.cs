//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5444
//     Support: http://www.cnblogs.com/huxj
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;
using Hxj.Data;
using Hxj.Data.Common;

namespace entCMS.Models
{

	/// <summary>
	/// 实体类viewPurviews 。(属性说明自动提取数据库字段的描述信息)
	/// </summary>
	[Serializable]
	public class viewPurviews : Entity 
	{
		public viewPurviews():base("viewPurviews") {}

		#region Model
		private char _UR;
		private long? _URId;
		private string _NodeCode;
		private int? _Type;
		/// <summary>
		/// 
		/// </summary>
		public char UR
		{
			get{ return _UR; }
			set
			{
				this.OnPropertyValueChange(_.UR,_UR,value);
				this._UR=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public long? URId
		{
			get{ return _URId; }
			set
			{
				this.OnPropertyValueChange(_.URId,_URId,value);
				this._URId=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string NodeCode
		{
			get{ return _NodeCode; }
			set
			{
				this.OnPropertyValueChange(_.NodeCode,_NodeCode,value);
				this._NodeCode=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int? Type
		{
			get{ return _Type; }
			set
			{
				this.OnPropertyValueChange(_.Type,_Type,value);
				this._Type=value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 是否只读
		/// </summary>
		public override bool IsReadOnly()
		{
			return true;
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.UR,
				_.URId,
				_.NodeCode,
				_.Type};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				this._UR,
				this._URId,
				this._NodeCode,
				this._Type};
		}
		/// <summary>
		/// 给当前实体赋值
		/// </summary>
		public override void SetPropertyValues(IDataReader reader)
		{
			this._UR = DataUtils.ConvertValue<char>(reader["UR"]);
			this._URId = DataUtils.ConvertValue<long?>(reader["URId"]);
			this._NodeCode = DataUtils.ConvertValue<string>(reader["NodeCode"]);
			this._Type = DataUtils.ConvertValue<int?>(reader["Type"]);
		}
		/// <summary>
		/// 给当前实体赋值
		/// </summary>
		public override void SetPropertyValues(DataRow row)
		{
            this._UR = DataUtils.ConvertValue<char>(row["UR"]);
			this._URId = DataUtils.ConvertValue<long?>(row["URId"]);
			this._NodeCode = DataUtils.ConvertValue<string>(row["NodeCode"]);
			this._Type = DataUtils.ConvertValue<int?>(row["Type"]);
		}
		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","viewPurviews");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field UR = new Field("UR","viewPurviews","UR");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field URId = new Field("URId","viewPurviews","URId");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field NodeCode = new Field("NodeCode","viewPurviews","NodeCode");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Type = new Field("Type","viewPurviews","Type");
		}
		#endregion


	}
}

