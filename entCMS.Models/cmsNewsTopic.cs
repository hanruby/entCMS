//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5444
//     Support: http://www.cnblogs.com/huxj
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;
using Hxj.Data;
using Hxj.Data.Common;

namespace entCMS.Models
{

	/// <summary>
	/// 实体类cmsNewsTopic 。(属性说明自动提取数据库字段的描述信息)
	/// </summary>
	[Serializable]
	public class cmsNewsTopic : Entity 
	{
		public cmsNewsTopic():base("cmsNewsTopic") {}

		#region Model
		private long _Id;
		private string _Name;
		private string _SmallPic;
		private string _BigPic;
		private string _Keywords;
		private string _Description;
		private int? _SortNo;
		private int? _IsEnabled;
		private DateTime? _CreateTime;
		/// <summary>
		/// 
		/// </summary>
		public long Id
		{
			get{ return _Id; }
			set
			{
				this.OnPropertyValueChange(_.Id,_Id,value);
				this._Id=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string Name
		{
			get{ return _Name; }
			set
			{
				this.OnPropertyValueChange(_.Name,_Name,value);
				this._Name=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string SmallPic
		{
			get{ return _SmallPic; }
			set
			{
				this.OnPropertyValueChange(_.SmallPic,_SmallPic,value);
				this._SmallPic=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string BigPic
		{
			get{ return _BigPic; }
			set
			{
				this.OnPropertyValueChange(_.BigPic,_BigPic,value);
				this._BigPic=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string Keywords
		{
			get{ return _Keywords; }
			set
			{
				this.OnPropertyValueChange(_.Keywords,_Keywords,value);
				this._Keywords=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string Description
		{
			get{ return _Description; }
			set
			{
				this.OnPropertyValueChange(_.Description,_Description,value);
				this._Description=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int? SortNo
		{
			get{ return _SortNo; }
			set
			{
				this.OnPropertyValueChange(_.SortNo,_SortNo,value);
				this._SortNo=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int? IsEnabled
		{
			get{ return _IsEnabled; }
			set
			{
				this.OnPropertyValueChange(_.IsEnabled,_IsEnabled,value);
				this._IsEnabled=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public DateTime? CreateTime
		{
			get{ return _CreateTime; }
			set
			{
				this.OnPropertyValueChange(_.CreateTime,_CreateTime,value);
				this._CreateTime=value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的标识列
		/// </summary>
		public override Field GetIdentityField()
		{
			return _.Id;
		}
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.Id};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.Id,
				_.Name,
				_.SmallPic,
				_.BigPic,
				_.Keywords,
				_.Description,
				_.SortNo,
				_.IsEnabled,
				_.CreateTime};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				this._Id,
				this._Name,
				this._SmallPic,
				this._BigPic,
				this._Keywords,
				this._Description,
				this._SortNo,
				this._IsEnabled,
				this._CreateTime};
		}
		/// <summary>
		/// 给当前实体赋值
		/// </summary>
		public override void SetPropertyValues(IDataReader reader)
		{
			this._Id = DataUtils.ConvertValue<long>(reader["Id"]);
			this._Name = DataUtils.ConvertValue<string>(reader["Name"]);
			this._SmallPic = DataUtils.ConvertValue<string>(reader["SmallPic"]);
			this._BigPic = DataUtils.ConvertValue<string>(reader["BigPic"]);
			this._Keywords = DataUtils.ConvertValue<string>(reader["Keywords"]);
			this._Description = DataUtils.ConvertValue<string>(reader["Description"]);
			this._SortNo = DataUtils.ConvertValue<int?>(reader["SortNo"]);
			this._IsEnabled = DataUtils.ConvertValue<int?>(reader["IsEnabled"]);
			this._CreateTime = DataUtils.ConvertValue<DateTime?>(reader["CreateTime"]);
		}
		/// <summary>
		/// 给当前实体赋值
		/// </summary>
		public override void SetPropertyValues(DataRow row)
		{
			this._Id = DataUtils.ConvertValue<long>(row["Id"]);
			this._Name = DataUtils.ConvertValue<string>(row["Name"]);
			this._SmallPic = DataUtils.ConvertValue<string>(row["SmallPic"]);
			this._BigPic = DataUtils.ConvertValue<string>(row["BigPic"]);
			this._Keywords = DataUtils.ConvertValue<string>(row["Keywords"]);
			this._Description = DataUtils.ConvertValue<string>(row["Description"]);
			this._SortNo = DataUtils.ConvertValue<int?>(row["SortNo"]);
			this._IsEnabled = DataUtils.ConvertValue<int?>(row["IsEnabled"]);
			this._CreateTime = DataUtils.ConvertValue<DateTime?>(row["CreateTime"]);
		}
		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","cmsNewsTopic");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Id = new Field("Id","cmsNewsTopic","Id");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Name = new Field("Name","cmsNewsTopic","Name");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field SmallPic = new Field("SmallPic","cmsNewsTopic","SmallPic");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field BigPic = new Field("BigPic","cmsNewsTopic","BigPic");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Keywords = new Field("Keywords","cmsNewsTopic","Keywords");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Description = new Field("Description","cmsNewsTopic","Description");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field SortNo = new Field("SortNo","cmsNewsTopic","SortNo");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field IsEnabled = new Field("IsEnabled","cmsNewsTopic","IsEnabled");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field CreateTime = new Field("CreateTime","cmsNewsTopic","CreateTime");
		}
		#endregion


	}
}

