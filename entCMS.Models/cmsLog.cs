//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5444
//     Support: http://www.cnblogs.com/huxj
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;
using Hxj.Data;
using Hxj.Data.Common;

namespace entCMS.Models
{

	/// <summary>
	/// 实体类cmsLog 。(属性说明自动提取数据库字段的描述信息)
	/// </summary>
	[Serializable]
	public class cmsLog : Entity 
	{
		public cmsLog():base("cmsLog") {}

		#region Model
		private long _Id;
		private long? _UserId;
		private string _ResId;
		private int? _LogType;
		private string _Message;
		private DateTime? _AddTime;
		private string _LogIp;
		/// <summary>
		/// 
		/// </summary>
		public long Id
		{
			get{ return _Id; }
			set
			{
				this.OnPropertyValueChange(_.Id,_Id,value);
				this._Id=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public long? UserId
		{
			get{ return _UserId; }
			set
			{
				this.OnPropertyValueChange(_.UserId,_UserId,value);
				this._UserId=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string ResId
		{
			get{ return _ResId; }
			set
			{
				this.OnPropertyValueChange(_.ResId,_ResId,value);
				this._ResId=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int? LogType
		{
			get{ return _LogType; }
			set
			{
				this.OnPropertyValueChange(_.LogType,_LogType,value);
				this._LogType=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string Message
		{
			get{ return _Message; }
			set
			{
				this.OnPropertyValueChange(_.Message,_Message,value);
				this._Message=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public DateTime? AddTime
		{
			get{ return _AddTime; }
			set
			{
				this.OnPropertyValueChange(_.AddTime,_AddTime,value);
				this._AddTime=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string LogIp
		{
			get{ return _LogIp; }
			set
			{
				this.OnPropertyValueChange(_.LogIp,_LogIp,value);
				this._LogIp=value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的标识列
		/// </summary>
		public override Field GetIdentityField()
		{
			return _.Id;
		}
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.Id};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.Id,
				_.UserId,
				_.ResId,
				_.LogType,
				_.Message,
				_.AddTime,
				_.LogIp};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				this._Id,
				this._UserId,
				this._ResId,
				this._LogType,
				this._Message,
				this._AddTime,
				this._LogIp};
		}
		/// <summary>
		/// 给当前实体赋值
		/// </summary>
		public override void SetPropertyValues(IDataReader reader)
		{
			this._Id = DataUtils.ConvertValue<long>(reader["Id"]);
			this._UserId = DataUtils.ConvertValue<long?>(reader["UserId"]);
			this._ResId = DataUtils.ConvertValue<string>(reader["ResId"]);
			this._LogType = DataUtils.ConvertValue<int?>(reader["LogType"]);
			this._Message = DataUtils.ConvertValue<string>(reader["Message"]);
			this._AddTime = DataUtils.ConvertValue<DateTime?>(reader["AddTime"]);
			this._LogIp = DataUtils.ConvertValue<string>(reader["LogIp"]);
		}
		/// <summary>
		/// 给当前实体赋值
		/// </summary>
		public override void SetPropertyValues(DataRow row)
		{
			this._Id = DataUtils.ConvertValue<long>(row["Id"]);
			this._UserId = DataUtils.ConvertValue<long?>(row["UserId"]);
			this._ResId = DataUtils.ConvertValue<string>(row["ResId"]);
			this._LogType = DataUtils.ConvertValue<int?>(row["LogType"]);
			this._Message = DataUtils.ConvertValue<string>(row["Message"]);
			this._AddTime = DataUtils.ConvertValue<DateTime?>(row["AddTime"]);
			this._LogIp = DataUtils.ConvertValue<string>(row["LogIp"]);
		}
		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","cmsLog");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Id = new Field("Id","cmsLog","Id");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field UserId = new Field("UserId","cmsLog","UserId");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field ResId = new Field("ResId","cmsLog","ResId");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field LogType = new Field("LogType","cmsLog","LogType");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Message = new Field("Message","cmsLog","Message");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field AddTime = new Field("AddTime","cmsLog","AddTime");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field LogIp = new Field("LogIp","cmsLog","LogIp");
		}
		#endregion


	}
}

